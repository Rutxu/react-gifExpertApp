{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAYU,SAhBrB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCHCS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECHd,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAiBzC,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAAEtB,IAEEuB,EDZ4BK,CAAc5B,GAApC6B,EAFyB,EAE/BtB,KAAiBe,EAFc,EAEdA,QAQxB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQW,EAASpB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEnBjCmB,EAAe,WAAM,MAGM5C,mBAAU,CAAC,YAHjB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAY9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAS,OACrB,cAAC,EAAD,CAAyBA,UAAaA,GAAxBA,Y,MCjBtCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ec3eabbd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategorias( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n         }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input type=\"text\" value= {inputValue} onChange= { handleInputChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( categoria )}&limit=10&api_key=ds3sAGyHMijrFKskDwOpCfQUInpjyHhY`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import React, { useState, useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const {data: imagenes , loading} = useFetchGifs( categoria );\r\n\r\n    // const [images, setImages] = useState([]);\r\n    // useEffect(() => {\r\n    //     getGifs( categoria )\r\n    //         .then( setImages);\r\n    // }, [ categoria ]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imagenes.map( img => (\r\n                        <GifGridItem key={img.id} {...img }/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [ categoria ]);\r\n    \r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['Haikyuu', 'Shingeki no Kyojin', 'Zankyou no Terror']\r\n    const [categorias, setCategorias] = useState( ['Haikyuu']);\r\n\r\n    // TAREA 70\r\n    // <button onClick={handleAdd}>Agregar</button>\r\n    // const handleAdd = () => {\r\n    //     setCategorias( [...categorias, 'Naruto'] );\r\n    //     // setCategorias( cats => [...cats, 'Naruto']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => \r\n                        <GifGrid key={categoria} categoria = {categoria} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}